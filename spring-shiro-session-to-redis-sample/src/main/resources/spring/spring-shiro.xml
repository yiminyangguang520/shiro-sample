<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

  <description>Shiro Configuration</description>
  <import resource="classpath:spring/spring-redis.xml" />

  <!--shiro-redis redisCacheManager-->
  <bean id="redisCacheManager" class="org.crazycake.shiro.RedisCacheManager">
    <property name="keyPrefix" value="shiro_redis_session:"/>
    <property name="redisManager" ref="redisClient"/>
  </bean>

  <!--custom myself realm-->
  <bean id="customRealm" class="com.hafiz.www.shiro.CustomRealm">
    <property name="cacheManager" ref="redisCacheManager"/>
    <property name="authenticationCachingEnabled" value="true"/>
  </bean>

  <!--redisSessionDAO-->
  <bean id="redisSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"></bean>


  <!--simpleCookie,不定义在集群环境下会出现There is no session with id ....-->
  <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    <constructor-arg name="name" value="custom.session"/>
    <property name="path" value="/"/>
  </bean>

  <!--sessionManager-->
  <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    <property name="sessionDAO" ref="redisSessionDAO"/>
    <property name="sessionIdCookie" ref="simpleCookie"/>
  </bean>

  <!--Shiro`s main business-tier object for web-enable applications-->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="customRealm"/>
    <property name="cacheManager" ref="redisCacheManager"/>
    <property name="sessionManager" ref="sessionManager"/>
  </bean>

  <!--shiro filter-->
  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/login.html"/>
    <property name="successUrl" value="/index.html"/>
    <property name="unauthorizedUrl" value="/unauthorized.html"/>
    <property name="filters">
      <util:map>
        <entry key="auth">
          <bean class="com.hafiz.www.filter.AuthorizeFilter"/>
        </entry>
      </util:map>
    </property>
    <property name="filterChainDefinitions">
      <value>
        /login.json = anon
        /logout.json = anon
        /js/** = anon
        / = authc
        /** = auth
      </value>
    </property>
  </bean>
</beans>